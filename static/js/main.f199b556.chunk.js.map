{"version":3,"sources":["types/FilterOption.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterOption","TodoInfo","todos","onSelectTodoCard","selectedTodoCard","map","id","completed","title","userId","isCardSelected","className","classNames","type","onClick","TodoList","TodoFilter","filterOption","query","onSelectOption","onChange","onSubmit","event","preventDefault","value","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","React","useState","user","setUser","email","name","useEffect","getUser","selectedUser","href","App","setTodos","setSelectedTodoCard","setfilterOption","setQuery","response","filteredTodos","useMemo","filter","todo","todoTitle","toLowerCase","includes","trim","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f199b556.chunk.js","sourcesContent":["export enum FilterOption {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onSelectTodoCard: (todoCard: Todo) => void;\n  selectedTodoCard: Todo | null;\n}\n\nexport const TodoInfo: FC<Props> = ({\n  todos,\n  onSelectTodoCard,\n  selectedTodoCard,\n}) => {\n  return (\n    <>\n      {todos.map(({\n        id,\n        completed,\n        title,\n        userId,\n      }) => {\n        const isCardSelected = selectedTodoCard?.id === id;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => (\n                  onSelectTodoCard({\n                    id,\n                    completed,\n                    title,\n                    userId,\n                  })\n                )}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': isCardSelected,\n                    'fa-eye': !isCardSelected,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoCard: Todo | null;\n  onSelectTodoCard: (todoCard: Todo) => void;\n}\n\nexport const TodoList: FC<Props> = ({\n  todos,\n  selectedTodoCard,\n  onSelectTodoCard,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <th />\n        </tr>\n      </thead>\n\n      <tbody>\n        <TodoInfo\n          todos={todos}\n          selectedTodoCard={selectedTodoCard}\n          onSelectTodoCard={onSelectTodoCard}\n        />\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilterOption } from '../../types/FilterOption';\n\ninterface Props {\n  filterOption: string;\n  query: string;\n  onSelectOption: (filterOption: FilterOption) => void;\n  onChange: (query: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterOption,\n  query,\n  onSelectOption,\n  onChange,\n}) => {\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form className=\"field has-addons\" onSubmit={handleSubmit}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterOption}\n            onChange={(event) => (\n              onSelectOption(event.target.value as FilterOption)\n            )}\n          >\n            <option value={FilterOption.All}>\n              {FilterOption.All}\n            </option>\n            <option value={FilterOption.Active}>\n              {FilterOption.Active}\n            </option>\n            <option value={FilterOption.Completed}>\n              {FilterOption.Completed}\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodoCard: Todo;\n  onSelectTodoCard: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodoCard,\n  onSelectTodoCard,\n}) => {\n  const [user, setUser] = React.useState<User | null>(null);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodoCard;\n  const { email, name } = user || {};\n\n  useEffect(() => {\n    getUser(selectedTodoCard.userId)\n      .then(selectedUser => setUser(selectedUser));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelectTodoCard(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import {\n  useEffect,\n  FC,\n  useState,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { FilterOption } from './types/FilterOption';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [\n    selectedTodoCard,\n    setSelectedTodoCard,\n  ] = useState<Todo | null>(null);\n  const [\n    filterOption,\n    setfilterOption,\n  ] = useState<FilterOption>(FilterOption.All);\n  const [query, setQuery] = useState<string>('');\n\n  useEffect(() => {\n    getTodos().then(response => setTodos(response));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const todoTitle = todo.title\n        .toLowerCase()\n        .includes(query.toLowerCase().trim());\n\n      switch (filterOption) {\n        case FilterOption.Active:\n          return !todo.completed && todoTitle;\n        case FilterOption.Completed:\n          return todo.completed && todoTitle;\n        case FilterOption.All:\n        default:\n          return todoTitle;\n      }\n    });\n  }, [todos, filterOption, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterOption={filterOption}\n                query={query}\n                onSelectOption={setfilterOption}\n                onChange={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodoCard={selectedTodoCard}\n                    onSelectTodoCard={setSelectedTodoCard}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoCard && (\n        <TodoModal\n          selectedTodoCard={selectedTodoCard}\n          onSelectTodoCard={setSelectedTodoCard}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}