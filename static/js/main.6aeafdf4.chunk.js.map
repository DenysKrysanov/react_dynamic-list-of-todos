{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoCard","setSelectedTodoCard","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filterOption","setFilterOption","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","React","useState","user","setUser","userId","email","name","useEffect","getUser","selectedUser","href","App","setTodos","setfilterOption","response","filterTodos","useMemo","filter","todoTitle","toLowerCase","includes","trim","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6aeafdf4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoCard: Todo | null;\n  setSelectedTodoCard: (todoCard: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoCard,\n  setSelectedTodoCard,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th>  </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <>\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n\n                  </>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodoCard(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': selectedTodoCard?.id === todo.id,\n                    'fa-eye': selectedTodoCard?.id !== todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  filterOption: string;\n  setFilterOption: (filterOption: string) => void;\n  query: string;\n  setQuery: (query: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterOption,\n  setFilterOption,\n  query,\n  setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterOption}\n            onChange={(event) => setFilterOption(event.target.value)}\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodoCard: Todo;\n  setSelectedTodoCard: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodoCard,\n  setSelectedTodoCard,\n}) => {\n  const [user, setUser] = React.useState<User | null>(null);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodoCard;\n  const { email, name } = user || {};\n\n  useEffect(() => {\n    getUser(selectedTodoCard.userId)\n      .then(selectedUser => setUser(selectedUser));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodoCard(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = React.useState<Todo[]>([]);\n  const [\n    selectedTodoCard,\n    setSelectedTodoCard,\n  ] = React.useState<Todo | null>(null);\n  const [filterOption, setfilterOption] = React.useState<string>('all');\n  const [query, setQuery] = React.useState<string>('');\n\n  useEffect(() => {\n    getTodos().then(response => setTodos(response));\n  }, []);\n\n  const filterTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const todoTitle = todo.title\n        .toLowerCase()\n        .includes(query.toLowerCase().trim());\n\n      switch (filterOption) {\n        case 'active':\n          return !todo.completed && todoTitle;\n        case 'completed':\n          return todo.completed && todoTitle;\n        default:\n          return todoTitle;\n      }\n    });\n  }, [todos, filterOption, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterOption={filterOption}\n                setFilterOption={setfilterOption}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={filterTodos}\n                    selectedTodoCard={selectedTodoCard}\n                    setSelectedTodoCard={setSelectedTodoCard}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoCard && (\n        <TodoModal\n          selectedTodoCard={selectedTodoCard}\n          setSelectedTodoCard={setSelectedTodoCard}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}